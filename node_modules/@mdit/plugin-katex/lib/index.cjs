"use strict";var h=require("node:module"),m=require("@mdit/plugin-tex"),i=require("katex");const o=e=>e.replace(/&/gu,"&amp;").replace(/</gu,"&lt;").replace(/>/gu,"&gt;").replace(/"/gu,"&quot;").replace(/'/gu,"&#039;"),x=h.createRequire(typeof document>"u"?require("url").pathToFileURL(__filename).href:document.currentScript&&document.currentScript.src||new URL("index.cjs",document.baseURI).href),k=(e,r)=>{try{return i.renderToString(e,{...r,displayMode:!1})}catch(t){return r.throwOnError&&console.warn(t),`<span class='katex-error' title='${o(t.toString())}'>${o(e)}</span>`}},w=(e,r)=>{try{return`<p class='katex-block'>${i.renderToString(e,{...r,displayMode:!0})}</p>
`}catch(t){return r.throwOnError&&console.warn(t),`<p class='katex-block katex-error' title='${o(t.toString())}'>${o(e)}</p>
`}},f=(e,r={})=>{const{mhchem:t=!1,logger:c=n=>n==="newLineInDisplayMode"?"ignore":"warn",...u}=r;t&&x("katex/contrib/mhchem"),e.use(m.tex,{render:(n,s,l)=>{const a={...typeof c=="function"?{strict:(p,d,g)=>(c(p,d,g,l),"ignore")}:{},throwOnError:!1,...u};return s?w(n,a):k(n,a)}})};exports.katex=f;
//# sourceMappingURL=index.cjs.map
