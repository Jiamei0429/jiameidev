import{useEventListener,useDebounceFn}from"@vueuse/core";import{defineComponent,ref,onMounted,onUnmounted,h}from"vue";import{atou,LoadingIcon}from"vuepress-shared/client";import"../styles/echarts.scss";const parseEChartsConfig=(__echarts_config__,__echarts_config_type__,myChart)=>{if(__echarts_config_type__==="js"){const exports={},module={exports};let option,width,height;return eval(__echarts_config__),{option,width,height,...module.exports}}return{option:JSON.parse(__echarts_config__)}};var ECharts=defineComponent({name:"ECharts",props:{config:{type:String,required:!0},id:{type:String,required:!0},title:{type:String,default:""},type:{type:String,default:"json"}},setup(t){const n=ref(!0),r=ref();let e;return useEventListener("resize",useDebounceFn(()=>e==null?void 0:e.resize(),100)),onMounted(()=>{Promise.all([import("echarts"),new Promise(o=>setTimeout(o,MARKDOWN_ENHANCE_DELAY))]).then(([o])=>{e=o.init(r.value);const{option:i,...s}=parseEChartsConfig(atou(t.config),t.type);e.resize(s),e.setOption(i),n.value=!1})}),onUnmounted(()=>{e==null||e.dispose()}),()=>[t.title?h("div",{class:"echarts-title"},decodeURIComponent(t.title)):null,h("div",{class:"echarts-wrapper"},[h("div",{ref:r,class:"echarts-container",id:t.id}),n.value?h(LoadingIcon,{class:"echarts-loading",height:360}):null])]}});export{ECharts as default};
//# sourceMappingURL=ECharts.js.map
