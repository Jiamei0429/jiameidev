import{_ as d,Y as k,Z as m,a1 as a,a2 as t,$ as n,a0 as s,a3 as h,I as e}from"./framework-5ec5f799.js";const b="/images/arithmetic/digui1.png",_="/images/arithmetic/digui3.png",g="/images/arithmetic/digui2.png",f="/images/arithmetic/digui4.png",v={},y=h('<h1 id="递归算法" tabindex="-1"><a class="header-anchor" href="#递归算法" aria-hidden="true">#</a> 递归算法 🎉</h1><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="递归简介" tabindex="-1"><a class="header-anchor" href="#递归简介" aria-hidden="true">#</a> 递归简介💎</h2><h4 id="什么是递归呢" tabindex="-1"><a class="header-anchor" href="#什么是递归呢" aria-hidden="true">#</a> 什么是递归呢？</h4><p>一个函数在内部调用了其本身，那个这个函数就是递归函数，递归本质上是将原来的问题，转化为更小的同一问题，大白话就是：一个函数不断的调用自己，粗暴的理解：函数内部自己调用自己，这个函数就是递归函数。</p><div class="hint-container tip"><p class="hint-container-title">举例说明</p><p>从前有座山，山里有个庙，庙里有个老和尚在给小和尚讲故事，讲的是从前有座山，山里有个庙，庙里有个老和尚在给小和尚讲故事，讲的是从前有座山……</p><p>这就是一个典型的递归，在不考虑岁数等自身的条件下，这将是个死递归，没有终止条件。</p></div><div class="hint-container info"><p class="hint-container-title">递归三要素如下：</p><ul><li>一个问题的解可以分解为几个更小的同一题的解</li><li>分解后的子问题只存在数据不一样的问题。</li><li>存在递归终止条件</li></ul></div><div class="hint-container info"><p class="hint-container-title">递归其主要思想在于：</p><ul><li>将问题分为规模更小的相同问题，持续分解，直到问题规模小到可以用非常简单直接的方式来解决</li><li>分解完后，再合并结果</li></ul><figure><img src="'+_+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>因此，递归的编写首先可以定义一个函数，其次找到出口条件的同时还要找到规律。</p></div><div class="hint-container warning"><p class="hint-container-title">使用递归容易产生栈溢出的错误</p><ul><li>递归一定要有出口，否则就是&quot;死循环&quot;的递归</li><li>递归的次数不能太多</li></ul></div><h2 id="递归案例" tabindex="-1"><a class="header-anchor" href="#递归案例" aria-hidden="true">#</a> 递归案例 💎</h2>',10),w=n("h4",{id:"案例-实现5的阶乘",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#案例-实现5的阶乘","aria-hidden":"true"},"#"),s(" 案例：实现5的阶乘")],-1),x=n("figure",null,[n("img",{src:g,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),j=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token comment"},"// 5的阶乘：5*4*3*2*1"),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"sum"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"num"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("num "),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
   `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"("),s("num "),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token function"},"sum"),n("span",{class:"token punctuation"},"("),s("num"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
   `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),P=n("h4",{id:"案例一-实现10的阶乘",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#案例一-实现10的阶乘","aria-hidden":"true"},"#"),s(" 案例一：实现10的阶乘")],-1),V=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"jie_cheng"),n("span",{class:"token punctuation"},"("),s("num"),n("span",{class:"token punctuation"},":"),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token keyword"},"if"),s(" num "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token number"},"1"),s(`
  `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" num "),n("span",{class:"token operator"},"*"),s(" jie_cheng"),n("span",{class:"token punctuation"},"("),s("num"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("jie_cheng"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=n("h4",{id:"案例二-爬楼梯",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#案例二-爬楼梯","aria-hidden":"true"},"#"),s(" 案例二：爬楼梯")],-1),z=n("p",null,"假设你正在爬楼梯。需要 n 阶你才能到达楼顶 每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？",-1),A=n("figure",null,[n("img",{src:f,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),E=n("p",null,"根据这个数据结果发现规律，结果的1、2、3、5、8... 可以发现这个数据的结果就是斐波那契数列",-1),N=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"pa_lou"),n("span",{class:"token punctuation"},"("),s("n"),n("span",{class:"token punctuation"},":"),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token keyword"},"if"),s(" n "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token number"},"0"),s(`
  `),n("span",{class:"token keyword"},"elif"),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token operator"},"<="),s(" n "),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"return"),s(` n
  `),n("span",{class:"token keyword"},"else"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" pa_lou"),n("span",{class:"token punctuation"},"("),s("n"),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(" pa_lou"),n("span",{class:"token punctuation"},"("),s("n "),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"print"),n("span",{class:"token punctuation"},"("),s("pa_lou"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(` 
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),T=n("p",null,[n("strong",null,"轻松一刻")],-1),B=n("p",null,[n("strong",null,"视频教程")],-1),I={href:"https://work.weixin.qq.com/kfid/kfc8c0fd9b49c1f38b8",target:"_blank",rel:"noopener noreferrer"};function C(G,J){const o=e("Tabs"),i=e("AudioPlayer"),c=e("VideoPlayer"),l=e("ExternalLinkIcon");return k(),m("div",null,[y,a(o,{id:"79",data:[{title:"JavaScript"},{title:"Python"}],"tab-id":"fruit"},{tab0:t(({title:p,value:u,isActive:r})=>[w,x,j]),tab1:t(({title:p,value:u,isActive:r})=>[P,V,q,z,A,E,N]),_:1}),T,a(i,{src:"/mp3/GoTime.mp3",title:"英雄联盟",poster:"https://img0.baidu.com/it/u=2811220644,2164135624&fm=253&fmt=auto&app=120&f=JPEG?w=500&h=500"}),B,a(c,{src:"https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/97ac2dcc1367e03ac580204d6ca9a724.mp4"}),n("p",null,[s("至此，本章节的学习就到此结束了，如有疑惑，可对接"),n("a",I,[s("技术客服"),a(l)]),s("进行相关咨询。")])])}const S=d(v,[["render",C],["__file","digui.html.vue"]]);export{S as default};
